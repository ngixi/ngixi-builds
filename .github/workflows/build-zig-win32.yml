name: Build Zig Win32 Bindings

on:
  workflow_dispatch:
  workflow_call:

jobs:
  setup:
    runs-on: WIN-BUILD
    steps:
      - name: Checkout ngixi-builds repo
        uses: actions/checkout@v4
        with:
          clean: false

      - uses: ./.github/actions/setup-windows-build
        with:
          build-dir: zig-win32-build

  build-windows:
    runs-on: WIN-BUILD
    needs: setup
    permissions:
      contents: write
    defaults:
      run:
        working-directory: zig-win32-build
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0

    steps:

      - name: Clone ZigWin32Gen
        shell: pwsh
        run: |
          if (-not (Test-Path zigwin32gen)) {
            git clone ${{ vars.ZIGGEN_REPO }} zigwin32gen
          }

      - name: Configure Git for ZigWin32Gen
        shell: pwsh
        run: |
          git config --global --add safe.directory "$PWD\zigwin32gen"

      - name: Checkout ZigWin32Gen tag
        shell: pwsh
        run: |
          cd zigwin32gen
          git fetch --tags --force --quiet
          git checkout --quiet ${{ vars.ZIGGEN_TAG }}
          git rev-parse --short HEAD | Out-File -Encoding ascii ..\ZIG_WIN32_GIT.txt

      - name: Build ZigWin32Gen
        shell: pwsh
        run: |
          cd zigwin32gen
          zig build

      - name: Add version info to zig-out
        shell: pwsh
        run: |
          Copy-Item ZIG_WIN32_GIT.txt zigwin32gen\zig-out\

      - name: Create Zig Win32 tar.gz archive
        shell: pwsh
        run: |
          $version = $env:ZIGGEN_TAG
          $archiveName = "zig-win32-$version.tar.gz"
          # Create tar.gz from zig-out directory contents
          tar -czf $archiveName -C zigwin32gen/zig-out .

      - name: Delete existing Zig Win32 release (if exists)
        shell: pwsh
        run: |
          $tag = "zig-win32-$($env:ZIGGEN_TAG)"
          Write-Host "Attempting to delete existing release: $tag"
          try {
            $result = gh release delete $tag -y --cleanup-tag 2>&1
            Write-Host "Deletion command output: $result"
            if ($LASTEXITCODE -eq 0) {
              Write-Host "Successfully deleted existing release: $tag"
            } else {
              Write-Host "ERROR: Failed to delete existing release: $tag (exit code: $LASTEXITCODE)"
              exit 1
            }
          } catch {
            Write-Host "ERROR: Exception during deletion: $($_.Exception.Message)"
            Write-Host "Failed to delete existing release: $tag"
            exit 1
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Zig Win32 Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: zig-win32-${{ vars.ZIGGEN_TAG }}
          target_commitish: ${{ github.sha }}
          name: Zig Win32 Bindings ${{ vars.ZIGGEN_TAG }}
          body: |
            Zig Windows API Bindings v${{ vars.ZIGGEN_TAG }}
            Generated from ${{ vars.ZIGGEN_REPO }}
          files: |
            zig-win32-${{ vars.ZIGGEN_TAG }}.tar.gz