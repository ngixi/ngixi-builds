name: Build Zig Win32 Bindings

on:
  workflow_dispatch:
  workflow_call:

jobs:
  setup:
    runs-on: WIN-BUILD
    steps:
      - name: Checkout ngixi-builds repo
        uses: actions/checkout@v4
        with:
          clean: false

      - uses: ./.github/actions/setup-windows-build
        with:
          build-dir: zig-win32-build

  build-zig:
    runs-on: WIN-BUILD
    needs: setup
    permissions:
      contents: write
    defaults:
      run:
        working-directory: zig-win32-build

    steps:
      - name: Clone ZigWin32Gen
        shell: pwsh
        run: |
          # Remove existing directory if it exists
          if (Test-Path zigwin32gen) {
            Remove-Item zigwin32gen -Recurse -Force
          }
          git clone ${{ vars.ZIGGEN_REPO }} zigwin32gen

      - name: Checkout ZigWin32Gen tag
        shell: pwsh
        run: |
          cd zigwin32gen
          git fetch --tags --force --quiet
          git checkout --quiet ${{ vars.ZIGGEN_TAG }}
          git rev-parse --short HEAD | Out-File -Encoding ascii ..\ZIG_WIN32_GIT.txt

      - name: Build ZigWin32Gen
        shell: pwsh
        run: |
          cd zigwin32gen
          zig build
          # Verify build output
          if (Test-Path "zig-out") {
            Write-Host "Build successful - zig-out directory exists"
            Get-ChildItem "zig-out" -Name | Select-Object -First 5
          } else {
            Write-Host "ERROR: Build failed - zig-out directory not found"
            exit 1
          }

      - name: Create Zig release commit
        shell: pwsh
        run: |
          # Create a new orphan branch for this release
          $releaseBranch = "zig-artifacts"
          git checkout --orphan $releaseBranch
          
          # Clear everything
          git rm -rf . 2>/dev/null || true
          
          # Add zig-out contents
          Copy-Item -Recurse "zigwin32gen/zig-out/*" . -Force
          Copy-Item "zigwin32gen/zig-out/ZIG_WIN32_GIT.txt" .
          
          # Commit and tag
          git add .
          $commitMsg = "Zig Win32 Bindings v${{ vars.ZIGGEN_TAG }}"
          git commit -m $commitMsg
          git tag "zig-win32-${{ vars.ZIGGEN_TAG }}"
          
          # Push tag only (not the branch)
          git push origin "zig-win32-${{ vars.ZIGGEN_TAG }}"

      - name: Create Zig Win32 Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: zig-win32-${{ vars.ZIGGEN_TAG }}
          name: Zig Win32 Bindings ${{ vars.ZIGGEN_TAG }}
          body: |
            Zig Windows API Bindings v${{ vars.ZIGGEN_TAG }}
            Generated from ${{ vars.ZIGGEN_REPO }}

            Download the source code archive to get the Zig binding files.
