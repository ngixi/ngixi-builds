name: Build SDL3 - win_x86_64-msvc

on:
  workflow_dispatch:
  workflow_call:

jobs:
  setup:
    runs-on: WIN-BUILD
    steps:
      - name: Checkout ngixi-builds repo
        uses: actions/checkout@v4
        with:
          clean: false

      - uses: ./.github/actions/setup-build
        with:
          build-dir: sdl3-build

  build-windows:
    runs-on: WIN-BUILD
    needs: setup
    defaults:
      run:
        working-directory: sdl3-build

    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Cache SDL3 build
        uses: actions/cache@v4
        id: cache-sdl3
        with:
          path: |
            sdl3-build/sdl/build-static
            sdl3-build/sdl/build-shared
            sdl3-build/sdl/install
            sdl3-build/sdl3_static_win_x86_64.tar.gz
            sdl3-build/sdl3_shared_win_x86_64.tar.gz
          key: sdl3-windows-${{ vars.SDL_TAG }}-${{ runner.os }}
          restore-keys: |
            sdl3-windows-${{ vars.SDL_TAG }}-

      - name: Checkout SDL3
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: libsdl-org/SDL
          ref: ${{ vars.SDL_TAG }}
          path: sdl3-build/sdl
          clean: true

      - name: Generate SDL_GIT.txt
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          cd sdl
          git rev-parse --short HEAD | Out-File -Encoding ascii ..\SDL_GIT.txt

      - name: Configure SDL3 (static)
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd sdl
          cmake -S . -B build-static -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_C_COMPILER=cl ^
            -DCMAKE_CXX_COMPILER=cl ^
            -DCMAKE_CXX_FLAGS="/DNOMINMAX /DWIN32_LEAN_AND_MEAN" ^
            -DCMAKE_SYSTEM_VERSION=10.0 ^
            -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded ^
            -DSDL_SHARED=OFF ^
            -DSDL_STATIC=ON ^
            -DSDL_TEST_LIBRARY=ON ^
            -DSDL_TESTS=OFF ^
            -DSDL_EXAMPLES=OFF

      - name: Build SDL3 (static)
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd sdl
          cmake --build build-static --parallel

      - name: Configure SDL3 (shared)
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd sdl
          cmake -S . -B build-shared -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_C_COMPILER=cl ^
            -DCMAKE_CXX_COMPILER=cl ^
            -DCMAKE_CXX_FLAGS="/DNOMINMAX /DWIN32_LEAN_AND_MEAN" ^
            -DCMAKE_SYSTEM_VERSION=10.0 ^
            -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded ^
            -DSDL_SHARED=ON ^
            -DSDL_STATIC=OFF ^
            -DSDL_TEST_LIBRARY=ON ^
            -DSDL_TESTS=OFF ^
            -DSDL_EXAMPLES=OFF

      - name: Build SDL3 (shared)
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd sdl
          cmake --build build-shared --parallel

      - name: Install SDL3 (static)
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd sdl
          cmake --install build-static --prefix install\windows-x64-static

      - name: Install SDL3 (shared)
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd sdl
          cmake --install build-shared --prefix install\windows-x64-shared

      - name: Parse SDL version
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: pwsh
        id: parse-version
        run: |
          $tag = "${{ vars.SDL_TAG }}"
          # Parse tag, e.g., if "release-3.2.26", version = "3.2.26"
          if ($tag -match "release-(\d+\.\d+\.\d+)") {
            $version = $matches[1]
          } else {
            Write-Error "Unrecognized SDL_TAG format: $tag"
            exit 1
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Add build.zig.zon to static install
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        uses: ./.github/actions/make-zig-zon
        with:
          name: "sdl3-static"
          version: ${{ steps.parse-version.outputs.version }}
          output-path: "sdl3-build/sdl/install/windows-x64-static/build.zig.zon"

      - name: Add build.zig.zon to shared install
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        uses: ./.github/actions/make-zig-zon
        with:
          name: "sdl3-shared"
          version: ${{ steps.parse-version.outputs.version }}
          output-path: "sdl3-build/sdl/install/windows-x64-shared/build.zig.zon"

      - name: Create tar archives
        shell: pwsh
        run: |
          # Remove existing archives
          Remove-Item -Force -ErrorAction SilentlyContinue sdl3_static_win_x86_64.tar.gz
          Remove-Item -Force -ErrorAction SilentlyContinue sdl3_shared_win_x86_64.tar.gz

          # Create static archive
          cd sdl/install/windows-x64-static
          tar -czf ../../../sdl3_static_win_x86_64.tar.gz *
          cd ../../..

          # Create shared archive
          cd sdl/install/windows-x64-shared
          tar -czf ../../../sdl3_shared_win_x86_64.tar.gz *
          cd ../../..

      - name: Report DLL dependents
        if: steps.cache-sdl3.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd sdl\install\windows-x64-shared\bin
          if exist SDL3.dll dumpbin /dependents SDL3.dll > "SDL3_DEPENDENTS.txt"

      - name: Verify archives exist
        shell: pwsh
        run: |
          Write-Host "Checking for SDL3 archives..."
          if (Test-Path "sdl3_static_win_x86_64.tar.gz") {
            Write-Host "Static archive found"
            Get-ChildItem "sdl3_static_win_x86_64.tar.gz"
          }
          if (Test-Path "sdl3_shared_win_x86_64.tar.gz") {
            Write-Host "Shared archive found"
            Get-ChildItem "sdl3_shared_win_x86_64.tar.gz"
          }
          if (-not (Test-Path "sdl3_static_win_x86_64.tar.gz") -and -not (Test-Path "sdl3_shared_win_x86_64.tar.gz")) {
            Write-Host "No archives found! Looking for any tar.gz files..."
            Get-ChildItem -Recurse -Filter "*.tar.gz"
          }

      - name: Create SDL_GIT.txt for cache hit
        if: steps.cache-sdl3.outputs.cache-hit == 'true'
        shell: pwsh
        run: |
          echo "cached-${{ vars.SDL_TAG }}" | Out-File -Encoding ascii SDL_GIT.txt

      - name: Upload SDL3 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdl3-windows-assets
          path: |
            sdl3-build/sdl3_static_win_x86_64.tar.gz
            sdl3-build/sdl3_shared_win_x86_64.tar.gz
            sdl3-build/SDL_GIT.txt